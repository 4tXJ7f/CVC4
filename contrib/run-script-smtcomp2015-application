#!/bin/bash

cvc4=./cvc4-application

read line
if [ "$line" != '(set-option :print-success true)' ]; then
  echo 'ERROR: first line supposed to be set-option :print-success, but got: "'"$line"'"' >&2
  exit 1
fi
echo success
read line
logic=$(expr "$line" : ' *(set-logic  *\([A-Z_]*\) *) *$')
if [ -z "$logic" ]; then
  echo 'ERROR: second line supposed to be set-logic, but got: "'"$line"'"' >&2
  exit 1
fi
echo success

function runcvc4 {
  # we run in this way for line-buffered input, otherwise memory's a
  # concern (plus it mimics what we'll end up getting from an
  # application-track trace runner?)
  $cvc4 --force-logic="$logic" -L smt2 --print-success --no-checking --no-interactive "$@" <&0-
}

case "$logic" in

QF_LRA)
  runcvc4 --incremental
  ;;
QF_LIA)
  # same as QF_LRA but add --pb-rewrites
  runcvc4 --incremental
  ;;
ANIA|AUFNIRA|QF_ANIA|QF_NIA|QF_UFNIA|UFNIA)
  runcvc4 --tear-down-incremental
  ;;
ALIA|AUFLIA|AUFLIRA|BV|UF|UFBV|UFIDL|UFLIA|UFLRA)
  runcvc4 --incremental
  ;;
NIA|NRA)
  runcvc4 --tear-down-incremental --cbqi
  ;;
LIA|LRA)
  runcvc4 --incremental --cbqi
  ;;
QF_BV)
  runcvc4 --incremental --bv-eq-slicer=auto --bv-div-zero-const --bv-intro-pow2
  ;;
QF_AUFLIA|QF_AX)
  runcvc4 --incremental --no-arrays-eager-index --arrays-eager-lemmas
  ;;
*)
  # just run the default
  runcvc4 --incremental
  ;;

esac
